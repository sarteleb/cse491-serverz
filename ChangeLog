2014-01-07  Ti Brown  <t@Titus-MacBook-Air-2.local>

 * Initialized repository, created server.py and README.
 * Added a return for an HTTP 1.0 response 200 OK
 * Added a return for a 'Content-type' of text/html
 * added a message header saying Hello World
 * added a body containing the server owner's name
 * added a princ.c.recv(1000) line to add more info 
 * added a function to handle connection
 * added a main function to handle server work
 * added links for the content, file, and image page
 * added support for POST requests
 * added support from multi/form data posts
 * added html tempaltes inherited form a base.html
 * refactored for WSGIus Brown  <t@Titus-MacBook-Air-2.local>
 * Added a file output and a jpeg image output 
 * Added Quixote demo apps
 * Added command line support
 * Added twill testing
	***BUG*** Currently not functioning properly
		no freaking idea why
* Added Support for .jpg and .tiff
* modified root directory to accept .tiff and .jpeg
# Added support for quotes add
# Added chat app, time posts with each message
* Project Selected was adding a thumbnail list
	* Link added to index page that will take user to a list
	of all uploaded images in thumbail format.
	* Added a query "num" that grabs the image at the provided
	number.  Then i simply added a method to return the count 
	of the images.  In image list i just used AJAX to iterate 
	through the list of images and display them
# Project selected were projects 15 and 8
	* project 15 has been fully implemented 
	* users can login and logout
	* users can also create an account
	* only one account can be active at a time
	* no identical accounts can be created
	* a test user of Username Brandon Password yolo 
	- was added for general testing purposes
	* project 8 was minimally implemented
	* users may comment on the "most rescent image page"
	* users who are logged in will have their names displayed
	* if no user is logged in comments will be anonymous
	* comments are global for all pictures even if a
	- new one is uploaded
	* all functionality for both projects was implmented using
	- quixote and basic html
* Projects selected were Making all data persistent and added a scoring
feature for images
	* Images can be upvoted/downvoted
	* Comments and scores are now persistent
	* cookie app functionality was also added
	* All images should be persistent as well


